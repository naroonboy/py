from opentelemetry import trace
from opentelemetry.sdk.resources import Resource
from opentelemetry.sdk.trace import TracerProvider
from opentelemetry.sdk.trace.export import BatchSpanProcessor
from opentelemetry.exporter.otlp.proto.grpc.trace_exporter import OTLPSpanExporter

# 1️⃣ Define the resource (service name)
resource = Resource(attributes={
    "service.name": "demo-otel-sdk-app"
})

# 2️⃣ Set tracer provider
provider = TracerProvider(resource=resource)
trace.set_tracer_provider(provider)

# 3️⃣ Configure OTLP exporter (to send to collector)
exporter = OTLPSpanExporter(
    endpoint="http://localhost:4317",
    insecure=True
)

# 4️⃣ Add span processor
span_processor = BatchSpanProcessor(exporter)
provider.add_span_processor(span_processor)

# 5️⃣ Get a tracer
tracer = trace.get_tracer(__name__)

# 6️⃣ Generate a trace
with tracer.start_as_current_span("span-to-collector") as span:
    span.set_attribute("example.key", "value456")
    span.add_event("Event sent to collector")
    print("Trace generated and sent to collector...")

print("✅ Done.")